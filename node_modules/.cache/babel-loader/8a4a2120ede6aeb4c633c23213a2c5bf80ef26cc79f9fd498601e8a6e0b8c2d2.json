{"ast":null,"code":"/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nconst eventemitter3_1 = require(\"eventemitter3\");\nclass WebSocketBrowserImpl extends eventemitter3_1.EventEmitter {\n  socket;\n  /** Instantiate a WebSocket class\n   * @constructor\n   * @param {String} address - url to a websocket server\n   * @param {(Object)} options - websocket options\n   * @param {(String|Array)} protocols - a list of protocols\n   * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n   */\n  constructor(address, options, protocols) {\n    super();\n    this.socket = new window.WebSocket(address, protocols);\n    this.socket.onopen = () => this.emit(\"open\");\n    this.socket.onmessage = event => this.emit(\"message\", event.data);\n    this.socket.onerror = error => this.emit(\"error\", error);\n    this.socket.onclose = event => {\n      this.emit(\"close\", event.code, event.reason);\n    };\n  }\n  /**\n   * Sends data through a websocket connection\n   * @method\n   * @param {(String|Object)} data - data to be sent via websocket\n   * @param {Object} optionsOrCallback - ws options\n   * @param {Function} callback - a callback called once the data is sent\n   * @return {Undefined}\n   */\n  send(data, optionsOrCallback, callback) {\n    const cb = callback || optionsOrCallback;\n    try {\n      this.socket.send(data);\n      cb();\n    } catch (error) {\n      cb(error);\n    }\n  }\n  /**\n   * Closes an underlying socket\n   * @method\n   * @param {Number} code - status code explaining why the connection is being closed\n   * @param {String} reason - a description why the connection is closing\n   * @return {Undefined}\n   * @throws {Error}\n   */\n  close(code, reason) {\n    this.socket.close(code, reason);\n  }\n  addEventListener(type, listener, options) {\n    this.socket.addEventListener(type, listener, options);\n  }\n}\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\nfunction default_1(address, options) {\n  return new WebSocketBrowserImpl(address, options);\n}\nexports.default = default_1;","map":{"version":3,"names":["Object","defineProperty","exports","value","eventemitter3_1","require","WebSocketBrowserImpl","EventEmitter","socket","constructor","address","options","protocols","window","WebSocket","onopen","emit","onmessage","event","data","onerror","error","onclose","code","reason","send","optionsOrCallback","callback","cb","close","addEventListener","type","listener","default_1","default"],"sources":["/Users/Devdev/Documents/GitHub/Cycle_Codebase/cycle-skelly/node_modules/rpc-websockets/dist/lib/client/websocket.browser.js"],"sourcesContent":["/**\n * WebSocket implements a browser-side WebSocket specification.\n * @module Client\n */\n\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst eventemitter3_1 = require(\"eventemitter3\");\nclass WebSocketBrowserImpl extends eventemitter3_1.EventEmitter {\n    socket;\n    /** Instantiate a WebSocket class\n     * @constructor\n     * @param {String} address - url to a websocket server\n     * @param {(Object)} options - websocket options\n     * @param {(String|Array)} protocols - a list of protocols\n     * @return {WebSocketBrowserImpl} - returns a WebSocket instance\n     */\n    constructor(address, options, protocols) {\n        super();\n        this.socket = new window.WebSocket(address, protocols);\n        this.socket.onopen = () => this.emit(\"open\");\n        this.socket.onmessage = (event) => this.emit(\"message\", event.data);\n        this.socket.onerror = (error) => this.emit(\"error\", error);\n        this.socket.onclose = (event) => {\n            this.emit(\"close\", event.code, event.reason);\n        };\n    }\n    /**\n     * Sends data through a websocket connection\n     * @method\n     * @param {(String|Object)} data - data to be sent via websocket\n     * @param {Object} optionsOrCallback - ws options\n     * @param {Function} callback - a callback called once the data is sent\n     * @return {Undefined}\n     */\n    send(data, optionsOrCallback, callback) {\n        const cb = callback || optionsOrCallback;\n        try {\n            this.socket.send(data);\n            cb();\n        }\n        catch (error) {\n            cb(error);\n        }\n    }\n    /**\n     * Closes an underlying socket\n     * @method\n     * @param {Number} code - status code explaining why the connection is being closed\n     * @param {String} reason - a description why the connection is closing\n     * @return {Undefined}\n     * @throws {Error}\n     */\n    close(code, reason) {\n        this.socket.close(code, reason);\n    }\n    addEventListener(type, listener, options) {\n        this.socket.addEventListener(type, listener, options);\n    }\n}\n/**\n * factory method for common WebSocket instance\n * @method\n * @param {String} address - url to a websocket server\n * @param {(Object)} options - websocket options\n * @return {Undefined}\n */\nfunction default_1(address, options) {\n    return new WebSocketBrowserImpl(address, options);\n}\nexports.default = default_1;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,YAAY;;AACZA,MAAM,CAACC,cAAc,CAACC,OAAO,EAAE,YAAY,EAAE;EAAEC,KAAK,EAAE;AAAK,CAAC,CAAC;AAC7D,MAAMC,eAAe,GAAGC,OAAO,CAAC,eAAe,CAAC;AAChD,MAAMC,oBAAoB,SAASF,eAAe,CAACG,YAAY,CAAC;EAC5DC,MAAM;EACN;AACJ;AACA;AACA;AACA;AACA;AACA;EACIC,WAAWA,CAACC,OAAO,EAAEC,OAAO,EAAEC,SAAS,EAAE;IACrC,KAAK,CAAC,CAAC;IACP,IAAI,CAACJ,MAAM,GAAG,IAAIK,MAAM,CAACC,SAAS,CAACJ,OAAO,EAAEE,SAAS,CAAC;IACtD,IAAI,CAACJ,MAAM,CAACO,MAAM,GAAG,MAAM,IAAI,CAACC,IAAI,CAAC,MAAM,CAAC;IAC5C,IAAI,CAACR,MAAM,CAACS,SAAS,GAAIC,KAAK,IAAK,IAAI,CAACF,IAAI,CAAC,SAAS,EAAEE,KAAK,CAACC,IAAI,CAAC;IACnE,IAAI,CAACX,MAAM,CAACY,OAAO,GAAIC,KAAK,IAAK,IAAI,CAACL,IAAI,CAAC,OAAO,EAAEK,KAAK,CAAC;IAC1D,IAAI,CAACb,MAAM,CAACc,OAAO,GAAIJ,KAAK,IAAK;MAC7B,IAAI,CAACF,IAAI,CAAC,OAAO,EAAEE,KAAK,CAACK,IAAI,EAAEL,KAAK,CAACM,MAAM,CAAC;IAChD,CAAC;EACL;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIC,IAAIA,CAACN,IAAI,EAAEO,iBAAiB,EAAEC,QAAQ,EAAE;IACpC,MAAMC,EAAE,GAAGD,QAAQ,IAAID,iBAAiB;IACxC,IAAI;MACA,IAAI,CAAClB,MAAM,CAACiB,IAAI,CAACN,IAAI,CAAC;MACtBS,EAAE,CAAC,CAAC;IACR,CAAC,CACD,OAAOP,KAAK,EAAE;MACVO,EAAE,CAACP,KAAK,CAAC;IACb;EACJ;EACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;EACIQ,KAAKA,CAACN,IAAI,EAAEC,MAAM,EAAE;IAChB,IAAI,CAAChB,MAAM,CAACqB,KAAK,CAACN,IAAI,EAAEC,MAAM,CAAC;EACnC;EACAM,gBAAgBA,CAACC,IAAI,EAAEC,QAAQ,EAAErB,OAAO,EAAE;IACtC,IAAI,CAACH,MAAM,CAACsB,gBAAgB,CAACC,IAAI,EAAEC,QAAQ,EAAErB,OAAO,CAAC;EACzD;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASsB,SAASA,CAACvB,OAAO,EAAEC,OAAO,EAAE;EACjC,OAAO,IAAIL,oBAAoB,CAACI,OAAO,EAAEC,OAAO,CAAC;AACrD;AACAT,OAAO,CAACgC,OAAO,GAAGD,SAAS","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}