{"ast":null,"code":"var _jsxFileName = \"/Users/Devdev/Documents/GitHub/Cycle_Codebase/cycle-skelly/src/components/Wallet/Wallet.js\",\n  _s = $RefreshSig$();\nimport React, { FC, useMemo } from 'react';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport { UnsafeBurnerWalletAdapter } from '@solana/wallet-adapter-wallets';\nimport { WalletModalProvider, WalletDisconnectButton, WalletMultiButton } from '@solana/wallet-adapter-react-ui';\nimport { clusterApiUrl } from '@solana/web3.js';\n\n// Default styles that can be overridden by your app\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nrequire('@solana/wallet-adapter-react-ui/styles.css');\nexport const Wallet = () => {\n  _s();\n  // The network can be set to 'devnet', 'testnet', or 'mainnet-beta'.\n  const network = WalletAdapterNetwork.Devnet;\n\n  // You can also provide a custom RPC endpoint.\n  const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n  const wallets = useMemo(() => [\n  /**\n   * Wallets that implement either of these standards will be available automatically.\n   *\n   *   - Solana Mobile Stack Mobile Wallet Adapter Protocol\n   *     (https://github.com/solana-mobile/mobile-wallet-adapter)\n   *   - Solana Wallet Standard\n   *     (https://github.com/anza-xyz/wallet-standard)\n   *\n   * If you wish to support a wallet that supports neither of those standards,\n   * instantiate its legacy wallet adapter here. Common legacy adapters can be found\n   * in the npm package `@solana/wallet-adapter-wallets`.\n   */\n  new UnsafeBurnerWalletAdapter()],\n  // eslint-disable-next-line react-hooks/exhaustive-deps\n  [network]);\n  return /*#__PURE__*/_jsxDEV(ConnectionProvider, {\n    endpoint: endpoint,\n    children: /*#__PURE__*/_jsxDEV(WalletProvider, {\n      wallets: wallets,\n      autoConnect: true,\n      children: /*#__PURE__*/_jsxDEV(WalletModalProvider, {\n        children: [/*#__PURE__*/_jsxDEV(WalletMultiButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(WalletDisconnectButton, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n_s(Wallet, \"RNaTq20PjYTGasfEtgZ8qKkPMD0=\");\n_c = Wallet;\nvar _c;\n$RefreshReg$(_c, \"Wallet\");","map":{"version":3,"names":["React","FC","useMemo","ConnectionProvider","WalletProvider","WalletAdapterNetwork","UnsafeBurnerWalletAdapter","WalletModalProvider","WalletDisconnectButton","WalletMultiButton","clusterApiUrl","jsxDEV","_jsxDEV","require","Wallet","_s","network","Devnet","endpoint","wallets","children","autoConnect","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/Devdev/Documents/GitHub/Cycle_Codebase/cycle-skelly/src/components/Wallet/Wallet.js"],"sourcesContent":["import React, { FC, useMemo } from 'react';\nimport { ConnectionProvider, WalletProvider } from '@solana/wallet-adapter-react';\nimport { WalletAdapterNetwork } from '@solana/wallet-adapter-base';\nimport { UnsafeBurnerWalletAdapter } from '@solana/wallet-adapter-wallets';\nimport {\n    WalletModalProvider,\n    WalletDisconnectButton,\n    WalletMultiButton\n} from '@solana/wallet-adapter-react-ui';\nimport { clusterApiUrl } from '@solana/web3.js';\n \n// Default styles that can be overridden by your app\nrequire('@solana/wallet-adapter-react-ui/styles.css');\n \nexport const Wallet = () => {\n    // The network can be set to 'devnet', 'testnet', or 'mainnet-beta'.\n    const network = WalletAdapterNetwork.Devnet;\n \n    // You can also provide a custom RPC endpoint.\n    const endpoint = useMemo(() => clusterApiUrl(network), [network]);\n \n    const wallets = useMemo(\n        () => [\n            /**\n             * Wallets that implement either of these standards will be available automatically.\n             *\n             *   - Solana Mobile Stack Mobile Wallet Adapter Protocol\n             *     (https://github.com/solana-mobile/mobile-wallet-adapter)\n             *   - Solana Wallet Standard\n             *     (https://github.com/anza-xyz/wallet-standard)\n             *\n             * If you wish to support a wallet that supports neither of those standards,\n             * instantiate its legacy wallet adapter here. Common legacy adapters can be found\n             * in the npm package `@solana/wallet-adapter-wallets`.\n             */\n            new UnsafeBurnerWalletAdapter(),\n        ],\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n        [network]\n    );\n \n    return (\n        <ConnectionProvider endpoint={endpoint}>\n            <WalletProvider wallets={wallets} autoConnect>\n                <WalletModalProvider>\n                    <WalletMultiButton />\n                    <WalletDisconnectButton />\n                    { /* Your app's components go here, nested within the context providers. */ }\n                </WalletModalProvider>\n            </WalletProvider>\n        </ConnectionProvider>\n    );\n};"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,EAAE,EAAEC,OAAO,QAAQ,OAAO;AAC1C,SAASC,kBAAkB,EAAEC,cAAc,QAAQ,8BAA8B;AACjF,SAASC,oBAAoB,QAAQ,6BAA6B;AAClE,SAASC,yBAAyB,QAAQ,gCAAgC;AAC1E,SACIC,mBAAmB,EACnBC,sBAAsB,EACtBC,iBAAiB,QACd,iCAAiC;AACxC,SAASC,aAAa,QAAQ,iBAAiB;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACAC,OAAO,CAAC,4CAA4C,CAAC;AAErD,OAAO,MAAMC,MAAM,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB;EACA,MAAMC,OAAO,GAAGX,oBAAoB,CAACY,MAAM;;EAE3C;EACA,MAAMC,QAAQ,GAAGhB,OAAO,CAAC,MAAMQ,aAAa,CAACM,OAAO,CAAC,EAAE,CAACA,OAAO,CAAC,CAAC;EAEjE,MAAMG,OAAO,GAAGjB,OAAO,CACnB,MAAM;EACF;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;EACY,IAAII,yBAAyB,CAAC,CAAC,CAClC;EACD;EACA,CAACU,OAAO,CACZ,CAAC;EAED,oBACIJ,OAAA,CAACT,kBAAkB;IAACe,QAAQ,EAAEA,QAAS;IAAAE,QAAA,eACnCR,OAAA,CAACR,cAAc;MAACe,OAAO,EAAEA,OAAQ;MAACE,WAAW;MAAAD,QAAA,eACzCR,OAAA,CAACL,mBAAmB;QAAAa,QAAA,gBAChBR,OAAA,CAACH,iBAAiB;UAAAa,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACrBb,OAAA,CAACJ,sBAAsB;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAET;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACD,CAAC;AAE7B,CAAC;AAACV,EAAA,CAtCWD,MAAM;AAAAY,EAAA,GAANZ,MAAM;AAAA,IAAAY,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}